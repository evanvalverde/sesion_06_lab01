---
- name: "Implementa el lab 01 de la sesion 06"
  hosts: nodo01
  vars:
    named_config: "/etc/named.conf"
    named_options_config: "/etc/sysconfig/named"
    resolv_conf: "/etc/resolv.conf"

  tasks:
    - name: "Instala la paqueteria de bind y bind-utils, desencadenando su arranque y habilitacion permanente"
      yum:
        name: "{{ item }}"
        state: present
      loop:
        - bind
        - bind-utils
      notify: "arranca y habilita named"
    
    - meta: flush_handlers

    - name: "Permite el servicio DNS en el firewall local"
      firewalld:
        service: dns
        state: enabled
        permanent: yes
        immediate: yes

    - name: "Comenta la opcion listen-on port 53 { 127.0.0.1; }; en {{ named_config }}"
      replace:
        path: "{{ named_config }}"
        regexp: '^(\s+listen-on port 53 { 127\.0\.0\.1; };)$'
        replace: '# \1'
        validate: 'named-checkconf %s'
      
    - name: "Comenta la opcion listen-on-v6 port 53 { ::1; }; en {{ named_config }}"
      replace:
        path: "{{ named_config }}"
        regexp: '^(\s+listen-on-v6 port 53 { ::1; };)$'
        replace: '# \1'
        validate: 'named-checkconf %s'

    - name: "Modifica {{ named_options_config }} para indicar que solo queremos trabajar con IPv4"
      lineinfile:
        path: "{{ named_options_config }}"
        line: 'OPTIONS="-4"'
        state: present
      notify: "reinicia named"
    
    - meta: flush_handlers

    - name: "Elimina los namservers existentes en {{ resolv_conf }}"
      lineinfile:
        path: "{{ resolv_conf }}"
        regexp: '^nameserver .+\n?$'
        state: absent

    - name: "Annade el namserver {{ ansible_facts['default_ipv4']['address'] }} a {{ resolv_conf }}"
      lineinfile:
        path: "{{ resolv_conf }}"
        line: "nameserver {{ ansible_facts['default_ipv4']['address'] }}"
        state: present
      notify: "tareas finales"
  
  handlers:
    - name: "arranca y habilita named"
      service:
        name: named
        state: started
        enabled: yes
    
    - name: "reinicia named"
      service:
        name: named
        state: restarted

    - name: "reinicia el servidor"
      reboot:
      listen: "tareas finales"

    - name: "Comprueba que el servicio named est√° levantado"
      service_facts:
      register: estado_servicios
      listen: "tareas finales"

    - name: "Mostrar el estado del servicio named"
      debug:
        var: estado_servicios["ansible_facts"]["services"]["named.service"]
      listen: "tareas finales"
...